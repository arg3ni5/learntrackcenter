import{e as A,r as a,a as D}from"./index-lcYHgldp.js";import{f as B,a as $,b,c as q,d as R,u as T}from"./studentService-AsJdI5fo.js";const j=c=>{const{setIsLoading:f,setLoadingText:h}=A(),[u,y]=a.useState([]),[g,m]=a.useState(),[o,d]=a.useState(!0),[E,s]=a.useState(null),{showNotification:r}=D();a.useEffect(()=>{c&&h(c),f(o)},[o,f]);const n=async()=>{try{d(!0);const t=await B();y(t)}catch{s("Error loading students")}finally{d(!1)}},p=async t=>{try{if(!t){console.error("Student ID is null or undefined");return}d(!0);const e=await $(t);m(e)}catch{s("Error loading student"),r("Error loading student","error"),console.error(`Error loading student ${t}`)}finally{d(!1)}};a.useEffect(()=>{n()},[]);const v=async t=>{try{if(!S(t))return;await b(t),r("Element added","success"),n()}catch{s("Error adding the student")}},N=async t=>{try{const e=t.filter(l=>!u.some(L=>L.fullName===l.fullName));if(e.length===0){r("All students already exist","error");return}if(e.filter(l=>!S(l)).length>0){r("Some students have invalid data","error");return}await q(e),r(`${e.length} elements added`,"success"),n()}catch(e){console.error("Error adding students:",e),s("Error adding students")}},w=async t=>{try{await R(t),n()}catch{s("Error deleting the student")}},x=async(t,e)=>{try{await T(t,e),n()}catch{s("Error updating the student")}},I=t=>typeof t>"u"||t.trim()===""?!1:/\S+@\S+\.\S+/.test(t),S=t=>u.some(i=>i.fullName===t.fullName)?(r("The student already exists","error"),!1):!t.fullName||!I(t.email)?(r("Invalid student data","error"),!1):!0;return{students:u,student:g,loadStudents:n,loadStudent:p,loading:o,error:E,handleAddStudent:v,handleAddStudents:N,handleRemoveStudent:w,handleUpdateStudent:x}};export{j as u};
