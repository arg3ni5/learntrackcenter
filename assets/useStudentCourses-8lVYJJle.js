import{r as i}from"./vendor-react-BWjxQFbR.js";import{d as f,c as U,e as R,u as B,r as F}from"./index-CqjrHKFh.js";import{c as y,b as $,e as w,n as x,u as M,h as j,w as k,q as z,p as A,f as I,m as G}from"./vendor-firebase-IMjs4EV5.js";import{f as H}from"./periodService-Dz_uy61m.js";const L=(r,t)=>`students/${r}/periods/${t}/courses`,J=async(r,t)=>{const e=y(f,L(r,t));return(await $(e)).docs.map(l=>({id:l.id,...l.data()}))},K=async(r,t)=>{try{const{periodId:e,periodCourseId:a}=t;if(!r)throw new Error("Student ID is null or undefined");if(!e)throw new Error("Period ID is null or undefined");if(!a)throw new Error("Course ID is null or undefined");const l=`students/${r}/periods/${e}/courses`,d=w(f,l,a);await x(d,t),console.log("Course added with ID: ",a);const h=y(f,"enrollments"),g=w(h);await x(g,{studentId:r,periodId:e,courseId:a});const s=w(f,`periods/${e}/courses`,a);await M(s,{enrolledStudents:j(r)});const S=y(f,`periods/${e}/courses/${a}/assignments`),D=await $(S),v=y(d,"assignments"),m=k(f);D.docs.forEach(u=>{const{title:P,contributionPercentage:c}=u.data(),{grade:E,percentage:b}=u.data(),C={id:u.id,assignmentId:u.id,title:P,grade:E||0,percentage:b||0,percentageMax:Number(c)},N=w(v,u.id);m.set(N,C)}),await m.commit(),console.log("Assignments added successfully")}catch(e){throw console.error("Error adding course: ",e),new Error("Failed to add course")}},O=async(r,t,e)=>{const a=y(f,"enrollments"),l=z(a,A("periodId","==",t),A("courseId","==",e),A("studentId","==",r)),d=await $(l);if(d.empty)console.error("Enrollment not found");else{const s=d.docs[0];await I(s.ref)}const h=w(f,L(r,t),e);if((await G(h)).exists())await I(h);else throw new Error("Course not found")},Y=r=>{const{setIsLoading:t}=U(),[e,a]=R("selectedPeriodId",null),[l]=i.useState([]),[d,h]=i.useState([]),[g,s]=i.useState(!0),[S,D]=i.useState(null),[v,m]=i.useState([]),[u,P]=R("availablePeriods",[]),{showNotification:c}=B();i.useEffect(()=>{t(g)},[g,t]);const E=async()=>{if(u.length===0)try{s(!0);const o=await H();P(o)}catch{D("Error fetching available periods"),c("Error fetching available periods","error")}finally{s(!1)}},b=async o=>{try{if(s(!0),o){a(o);const n=await F(o);m(n)}else m([])}catch{c("Error fetching available courses","error")}finally{s(!1)}},C=async o=>{try{if(!e)return;s(!0);const n=await J(o,e);h(n)}catch{c("Error fetching courses","error")}finally{s(!1)}};return i.useEffect(()=>{E()},[]),i.useEffect(()=>{r&&C(r)},[r,e]),i.useEffect(()=>{e&&b(e)},[e]),{loading:g,error:S,courses:l,studentCourses:d,availablePeriods:u,handleAddCourse:async(o,n)=>{try{if(!n.periodCourseId){console.error("handleAddCourse","Not period selected"),c("Not period selected","error");return}if(d.filter(p=>p.id===n.periodCourseId).length>0){c("Course already added","error");return}s(!0),await K(o,n),C(o)}catch{c("Error adding course","error")}finally{s(!1)}},handleDeleteCourse:async(o,n,p)=>{if(!p){console.error("handleDeleteCourse","Not period selected"),c("Not period selected","error");return}try{if(!n)return;s(!0),await O(o,p,n),C(o)}catch(q){console.error(q),D("Error deleting course"),c("Error deleting course","error")}finally{s(!1)}},availableCourses:v,loadAvailableCourses:b,loadAvailablePeriods:E,setPeriodId:a}};export{Y as u};
