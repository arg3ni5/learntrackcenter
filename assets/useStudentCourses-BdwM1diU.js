import{r as i}from"./vendor-react-BWjxQFbR.js";import{d as f,c as W,e as R,u as _,r as k}from"./index-CQusFBuD.js";import{_ as y,d as $,a as w,m as x,b as q,Q as F,W as M,R as U,k as A,y as I,h as j}from"./vendor-firebase-BZIgVnDU.js";import{f as z}from"./periodService-D8q2gFl3.js";const L=(r,t)=>`students/${r}/periods/${t}/courses`,B=async(r,t)=>{const e=y(f,L(r,t));return(await $(e)).docs.map(l=>({id:l.id,...l.data()}))},G=async(r,t)=>{try{const{periodId:e,periodCourseId:a}=t;if(!r)throw new Error("Student ID is null or undefined");if(!e)throw new Error("Period ID is null or undefined");if(!a)throw new Error("Course ID is null or undefined");const l=`students/${r}/periods/${e}/courses`,d=w(f,l,a);await x(d,t),console.log("Course added with ID: ",a);const h=y(f,"enrollments"),g=w(h);await x(g,{studentId:r,periodId:e,courseId:a});const s=w(f,`periods/${e}/courses`,a);await q(s,{enrolledStudents:F(r)});const S=y(f,`periods/${e}/courses/${a}/assignments`),E=await $(S),v=y(d,"assignments"),m=M(f);E.docs.forEach(u=>{const{title:P,contributionPercentage:c}=u.data(),{grade:b,percentage:D}=u.data(),C={id:u.id,assignmentId:u.id,title:P,grade:b||0,percentage:D||0,percentageMax:Number(c)},N=w(v,u.id);m.set(N,C)}),await m.commit(),console.log("Assignments added successfully")}catch(e){throw console.error("Error adding course: ",e),new Error("Failed to add course")}},H=async(r,t,e)=>{const a=y(f,"enrollments"),l=U(a,A("periodId","==",t),A("courseId","==",e),A("studentId","==",r)),d=await $(l);if(d.empty)console.error("Enrollment not found");else{const s=d.docs[0];await I(s.ref)}const h=w(f,L(r,t),e);if((await j(h)).exists())await I(h);else throw new Error("Course not found")},X=r=>{const{setIsLoading:t}=W(),[e,a]=R("selectedPeriodId",null),[l]=i.useState([]),[d,h]=i.useState([]),[g,s]=i.useState(!0),[S,E]=i.useState(null),[v,m]=i.useState([]),[u,P]=R("availablePeriods",[]),{showNotification:c}=_();i.useEffect(()=>{t(g)},[g,t]);const b=async()=>{if(u.length===0)try{s(!0);const o=await z();P(o)}catch{E("Error fetching available periods"),c("Error fetching available periods","error")}finally{s(!1)}},D=async o=>{try{if(s(!0),o){a(o);const n=await k(o);m(n)}else m([])}catch{c("Error fetching available courses","error")}finally{s(!1)}},C=async o=>{try{if(!e)return;s(!0);const n=await B(o,e);h(n)}catch{c("Error fetching courses","error")}finally{s(!1)}};return i.useEffect(()=>{b()},[]),i.useEffect(()=>{r&&C(r)},[r,e]),i.useEffect(()=>{e&&D(e)},[e]),{loading:g,error:S,courses:l,studentCourses:d,availablePeriods:u,handleAddCourse:async(o,n)=>{try{if(!n.periodCourseId){console.error("handleAddCourse","Not period selected"),c("Not period selected","error");return}if(d.filter(p=>p.id===n.periodCourseId).length>0){c("Course already added","error");return}s(!0),await G(o,n),C(o)}catch{c("Error adding course","error")}finally{s(!1)}},handleDeleteCourse:async(o,n,p)=>{if(!p){console.error("handleDeleteCourse","Not period selected"),c("Not period selected","error");return}try{if(!n)return;s(!0),await H(o,p,n),C(o)}catch(Q){console.error(Q),E("Error deleting course"),c("Error deleting course","error")}finally{s(!1)}},availableCourses:v,loadAvailableCourses:D,loadAvailablePeriods:b,setPeriodId:a}};export{X as u};
